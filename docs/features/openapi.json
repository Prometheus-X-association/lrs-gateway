{
    "openapi": "3.1.0",
    "info": {
        "title": "FastAPI",
        "version": "0.1.0"
    },
    "paths": {
        "/xAPI/statements/": {
            "head": {
                "summary": "Get",
                "description": "Read a single xAPI Statement or multiple xAPI Statements.\n\nLRS Specification:\nhttps://github.com/adlnet/xAPI-Spec/blob/1.0.3/xAPI-Communication.md#213-get-statements",
                "operationId": "get_xAPI_statements__head",
                "security": [
                    {
                        "HTTPBasic": []
                    },
                    {
                        "OpenIdConnect": []
                    },
                    {
                        "Cozy Authentication": []
                    },
                    {
                        "HTTPBasic": []
                    },
                    {
                        "OpenIdConnect": [
                            "statements/read/mine"
                        ]
                    },
                    {
                        "Cozy Authentication": []
                    }
                ],
                "parameters": [
                    {
                        "name": "statementId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Id of Statement to fetch",
                            "title": "Statementid"
                        },
                        "description": "Id of Statement to fetch"
                    },
                    {
                        "name": "agent",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "contentMediaType": "application/json",
                            "contentSchema": {},
                            "description": "Filter, only return Statements for which the specified Agent or Group is the Actor or Object of the Statement",
                            "title": "Agent"
                        },
                        "description": "Filter, only return Statements for which the specified Agent or Group is the Actor or Object of the Statement"
                    },
                    {
                        "name": "verb",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Filter, only return Statements matching the specified Verb id",
                            "title": "Verb"
                        },
                        "description": "Filter, only return Statements matching the specified Verb id"
                    },
                    {
                        "name": "activity",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Filter, only return Statements for which the Object of the Statement is an Activity with the specified id",
                            "title": "Activity"
                        },
                        "description": "Filter, only return Statements for which the Object of the Statement is an Activity with the specified id"
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Only Statements stored since the specified Timestamp (exclusive) are returned",
                            "title": "Since"
                        },
                        "description": "Only Statements stored since the specified Timestamp (exclusive) are returned"
                    },
                    {
                        "name": "until",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Only Statements stored at or before the specified Timestamp are returned",
                            "title": "Until"
                        },
                        "description": "Only Statements stored at or before the specified Timestamp are returned"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "ge": 0,
                            "description": "Maximum number of Statements to return. 0 indicates return the maximum the server will allow",
                            "default": 100,
                            "title": "Limit"
                        },
                        "description": "Maximum number of Statements to return. 0 indicates return the maximum the server will allow"
                    },
                    {
                        "name": "ascending",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "If \"true\", return results in ascending order of stored time",
                            "default": false,
                            "title": "Ascending"
                        },
                        "description": "If \"true\", return results in ascending order of stored time"
                    },
                    {
                        "name": "mine",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "If \"true\", return only the results for which the authority matches the \"agent\" associated to the user that is making the query.",
                            "default": false,
                            "title": "Mine"
                        },
                        "description": "If \"true\", return only the results for which the authority matches the \"agent\" associated to the user that is making the query."
                    },
                    {
                        "name": "search_after",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Sorting data to allow pagination through large number of search results.NB: for internal use, not part of the LRS specification.",
                            "title": "Search After"
                        },
                        "description": "Sorting data to allow pagination through large number of search results.NB: for internal use, not part of the LRS specification."
                    },
                    {
                        "name": "pit_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Point-in-time ID to ensure consistency of search requests through multiple pages.NB: for internal use, not part of the LRS specification.",
                            "title": "Pit Id"
                        },
                        "description": "Point-in-time ID to ensure consistency of search requests through multiple pages.NB: for internal use, not part of the LRS specification."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Get Xapi Statements  Head"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get",
                "description": "Read a single xAPI Statement or multiple xAPI Statements.\n\nLRS Specification:\nhttps://github.com/adlnet/xAPI-Spec/blob/1.0.3/xAPI-Communication.md#213-get-statements",
                "operationId": "get_xAPI_statements__get",
                "security": [
                    {
                        "HTTPBasic": []
                    },
                    {
                        "OpenIdConnect": []
                    },
                    {
                        "Cozy Authentication": []
                    },
                    {
                        "HTTPBasic": []
                    },
                    {
                        "OpenIdConnect": [
                            "statements/read/mine"
                        ]
                    },
                    {
                        "Cozy Authentication": []
                    }
                ],
                "parameters": [
                    {
                        "name": "statementId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Id of Statement to fetch",
                            "title": "Statementid"
                        },
                        "description": "Id of Statement to fetch"
                    },
                    {
                        "name": "agent",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "contentMediaType": "application/json",
                            "contentSchema": {},
                            "description": "Filter, only return Statements for which the specified Agent or Group is the Actor or Object of the Statement",
                            "title": "Agent"
                        },
                        "description": "Filter, only return Statements for which the specified Agent or Group is the Actor or Object of the Statement"
                    },
                    {
                        "name": "verb",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Filter, only return Statements matching the specified Verb id",
                            "title": "Verb"
                        },
                        "description": "Filter, only return Statements matching the specified Verb id"
                    },
                    {
                        "name": "activity",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Filter, only return Statements for which the Object of the Statement is an Activity with the specified id",
                            "title": "Activity"
                        },
                        "description": "Filter, only return Statements for which the Object of the Statement is an Activity with the specified id"
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Only Statements stored since the specified Timestamp (exclusive) are returned",
                            "title": "Since"
                        },
                        "description": "Only Statements stored since the specified Timestamp (exclusive) are returned"
                    },
                    {
                        "name": "until",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Only Statements stored at or before the specified Timestamp are returned",
                            "title": "Until"
                        },
                        "description": "Only Statements stored at or before the specified Timestamp are returned"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "ge": 0,
                            "description": "Maximum number of Statements to return. 0 indicates return the maximum the server will allow",
                            "default": 100,
                            "title": "Limit"
                        },
                        "description": "Maximum number of Statements to return. 0 indicates return the maximum the server will allow"
                    },
                    {
                        "name": "ascending",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "If \"true\", return results in ascending order of stored time",
                            "default": false,
                            "title": "Ascending"
                        },
                        "description": "If \"true\", return results in ascending order of stored time"
                    },
                    {
                        "name": "mine",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "If \"true\", return only the results for which the authority matches the \"agent\" associated to the user that is making the query.",
                            "default": false,
                            "title": "Mine"
                        },
                        "description": "If \"true\", return only the results for which the authority matches the \"agent\" associated to the user that is making the query."
                    },
                    {
                        "name": "search_after",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Sorting data to allow pagination through large number of search results.NB: for internal use, not part of the LRS specification.",
                            "title": "Search After"
                        },
                        "description": "Sorting data to allow pagination through large number of search results.NB: for internal use, not part of the LRS specification."
                    },
                    {
                        "name": "pit_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Point-in-time ID to ensure consistency of search requests through multiple pages.NB: for internal use, not part of the LRS specification.",
                            "title": "Pit Id"
                        },
                        "description": "Point-in-time ID to ensure consistency of search requests through multiple pages.NB: for internal use, not part of the LRS specification."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/GetStatementsResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/BaseXapiStatement-Output"
                                        }
                                    ],
                                    "title": "Response Get Xapi Statements  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Put",
                "description": "Store a single statement as a single member of a set.\n\nLRS Specification:\nhttps://github.com/adlnet/xAPI-Spec/blob/1.0.3/xAPI-Communication.md#211-put-statements",
                "operationId": "put_xAPI_statements__put",
                "security": [
                    {
                        "HTTPBasic": []
                    },
                    {
                        "OpenIdConnect": []
                    },
                    {
                        "Cozy Authentication": []
                    },
                    {
                        "HTTPBasic": []
                    },
                    {
                        "OpenIdConnect": [
                            "statements/write"
                        ]
                    },
                    {
                        "Cozy Authentication": []
                    }
                ],
                "parameters": [
                    {
                        "name": "statementId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Statementid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseXapiStatement-Input"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "400": {
                        "description": "The request was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetail"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Statements had a conflict with existing statements.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetail"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Post",
                "description": "Store a set of statements (or a single statement as a single member of a set).\n\nNB: at this time, using POST to make a GET request, is not supported.\nLRS Specification:\nhttps://github.com/adlnet/xAPI-Spec/blob/1.0.3/xAPI-Communication.md#212-post-statements",
                "operationId": "post_xAPI_statements__post",
                "security": [
                    {
                        "HTTPBasic": []
                    },
                    {
                        "OpenIdConnect": []
                    },
                    {
                        "Cozy Authentication": []
                    },
                    {
                        "HTTPBasic": []
                    },
                    {
                        "OpenIdConnect": [
                            "statements/write"
                        ]
                    },
                    {
                        "Cozy Authentication": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/BaseXapiStatement-Input"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/BaseXapiStatement-Input"
                                        }
                                    }
                                ],
                                "title": "Statements"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "format": "uuid"
                                            }
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Response Post Xapi Statements  Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetail"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Statements had a conflict with existing statements.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetail"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/__lbheartbeat__": {
            "get": {
                "summary": "Lbheartbeat",
                "description": "Load balancer heartbeat.\n\nReturn a 200 when the server is running.",
                "operationId": "lbheartbeat___lbheartbeat___get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/__heartbeat__": {
            "get": {
                "summary": "Heartbeat",
                "description": "Application heartbeat.\n\nReturn a 200 if all checks are successful.",
                "operationId": "heartbeat___heartbeat___get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Heartbeat"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xAPI/about": {
            "get": {
                "summary": "About",
                "description": "Return information about this LRS, including the xAPI version supported.",
                "operationId": "about_xAPI_about_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/whoami": {
            "get": {
                "summary": "Whoami",
                "description": "Return the current user's username along with their scopes.",
                "operationId": "whoami_whoami_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Whoami Whoami Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBasic": []
                    },
                    {
                        "OpenIdConnect": []
                    },
                    {
                        "Cozy Authentication": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "BaseXapiAccount": {
                "properties": {
                    "homePage": {
                        "$ref": "#/components/schemas/IRI",
                        "description": "Home page of the account's service provider",
                        "examples": [
                            "http://www.example.com"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Unique id or name of the Actor's account",
                        "examples": [
                            "John Doe"
                        ]
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "homePage",
                    "name"
                ],
                "title": "BaseXapiAccount",
                "description": "Pydantic model for IFI `account` property."
            },
            "BaseXapiActivity-Input": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/IRI",
                        "description": "Identifier for a single unique Activity",
                        "examples": [
                            "http://example.adlnet.gov/xapi/example/activity"
                        ]
                    },
                    "objectType": {
                        "type": "string",
                        "const": "Activity",
                        "title": "Objecttype",
                        "description": "Value `Activity`"
                    },
                    "definition": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiActivityDefinition-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiActivityInteractionDefinition-Input"
                            }
                        ],
                        "title": "Definition",
                        "description": "See BaseXapiActivityDefinition and BaseXapiActivityInteractionDefinition"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "BaseXapiActivity",
                "description": "Pydantic model for `Activity` type property."
            },
            "BaseXapiActivity-Output": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/IRI",
                        "description": "Identifier for a single unique Activity",
                        "examples": [
                            "http://example.adlnet.gov/xapi/example/activity"
                        ]
                    },
                    "objectType": {
                        "type": "string",
                        "const": "Activity",
                        "title": "Objecttype",
                        "description": "Value `Activity`"
                    },
                    "definition": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiActivityDefinition-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiActivityInteractionDefinition-Output"
                            }
                        ],
                        "title": "Definition",
                        "description": "See BaseXapiActivityDefinition and BaseXapiActivityInteractionDefinition"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "BaseXapiActivity",
                "description": "Pydantic model for `Activity` type property."
            },
            "BaseXapiActivityDefinition-Input": {
                "properties": {
                    "name": {
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/LanguageTag-Input"
                        },
                        "type": "object",
                        "title": "Name",
                        "description": "Human-readable/visual name of the Activity",
                        "examples": [
                            {
                                "en-US": "Example course"
                            }
                        ]
                    },
                    "description": {
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/LanguageTag-Input"
                        },
                        "type": "object",
                        "title": "Description",
                        "description": "Description of the Activity",
                        "examples": [
                            {
                                "en-US": "A fictitious example course."
                            }
                        ]
                    },
                    "type": {
                        "$ref": "#/components/schemas/IRI",
                        "title": "Type",
                        "description": "Type of the Activity",
                        "examples": [
                            "http://www.example.co.uk/types/exampleactivitytype"
                        ]
                    },
                    "moreInfo": {
                        "type": "string",
                        "minLength": 1,
                        "format": "uri",
                        "title": "Moreinfo",
                        "description": "URL to a document about the Activity",
                        "examples": [
                            "http://activitytype.example.com/345256"
                        ]
                    },
                    "extensions": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                },
                                {
                                    "items": {},
                                    "type": "array"
                                },
                                {
                                    "type": "object"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/IRI"
                        },
                        "type": "object",
                        "title": "Extensions",
                        "description": "Dictionary of other properties as needed",
                        "examples": [
                            {
                                "http://example.com/activitydefinitionextensions/room": {
                                    "id": "http://example.com/rooms/342",
                                    "name": "Example Room"
                                }
                            }
                        ]
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "title": "BaseXapiActivityDefinition",
                "description": "Pydantic model for `Activity` type `definition` property."
            },
            "BaseXapiActivityDefinition-Output": {
                "properties": {
                    "name": {
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/LanguageTag-Output"
                        },
                        "type": "object",
                        "title": "Name",
                        "description": "Human-readable/visual name of the Activity",
                        "examples": [
                            {
                                "en-US": "Example course"
                            }
                        ]
                    },
                    "description": {
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/LanguageTag-Output"
                        },
                        "type": "object",
                        "title": "Description",
                        "description": "Description of the Activity",
                        "examples": [
                            {
                                "en-US": "A fictitious example course."
                            }
                        ]
                    },
                    "type": {
                        "$ref": "#/components/schemas/IRI",
                        "title": "Type",
                        "description": "Type of the Activity",
                        "examples": [
                            "http://www.example.co.uk/types/exampleactivitytype"
                        ]
                    },
                    "moreInfo": {
                        "type": "string",
                        "minLength": 1,
                        "format": "uri",
                        "title": "Moreinfo",
                        "description": "URL to a document about the Activity",
                        "examples": [
                            "http://activitytype.example.com/345256"
                        ]
                    },
                    "extensions": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                },
                                {
                                    "items": {},
                                    "type": "array"
                                },
                                {
                                    "type": "object"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/IRI"
                        },
                        "type": "object",
                        "title": "Extensions",
                        "description": "Dictionary of other properties as needed",
                        "examples": [
                            {
                                "http://example.com/activitydefinitionextensions/room": {
                                    "id": "http://example.com/rooms/342",
                                    "name": "Example Room"
                                }
                            }
                        ]
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "title": "BaseXapiActivityDefinition",
                "description": "Pydantic model for `Activity` type `definition` property."
            },
            "BaseXapiActivityInteractionDefinition-Input": {
                "properties": {
                    "name": {
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/LanguageTag-Input"
                        },
                        "type": "object",
                        "title": "Name",
                        "description": "Human-readable/visual name of the Activity",
                        "examples": [
                            {
                                "en-US": "Example course"
                            }
                        ]
                    },
                    "description": {
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/LanguageTag-Input"
                        },
                        "type": "object",
                        "title": "Description",
                        "description": "Description of the Activity",
                        "examples": [
                            {
                                "en-US": "A fictitious example course."
                            }
                        ]
                    },
                    "type": {
                        "$ref": "#/components/schemas/IRI",
                        "title": "Type",
                        "description": "Type of the Activity",
                        "examples": [
                            "http://www.example.co.uk/types/exampleactivitytype"
                        ]
                    },
                    "moreInfo": {
                        "type": "string",
                        "minLength": 1,
                        "format": "uri",
                        "title": "Moreinfo",
                        "description": "URL to a document about the Activity",
                        "examples": [
                            "http://activitytype.example.com/345256"
                        ]
                    },
                    "extensions": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                },
                                {
                                    "items": {},
                                    "type": "array"
                                },
                                {
                                    "type": "object"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/IRI"
                        },
                        "type": "object",
                        "title": "Extensions",
                        "description": "Dictionary of other properties as needed",
                        "examples": [
                            {
                                "http://example.com/activitydefinitionextensions/room": {
                                    "id": "http://example.com/rooms/342",
                                    "name": "Example Room"
                                }
                            }
                        ]
                    },
                    "interactionType": {
                        "type": "string",
                        "enum": [
                            "true-false",
                            "choice",
                            "fill-in",
                            "long-fill-in",
                            "matching",
                            "performance",
                            "sequencing",
                            "likert",
                            "numeric",
                            "other"
                        ],
                        "title": "Interactiontype",
                        "description": "Type of the interaction"
                    },
                    "correctResponsesPattern": {
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "type": "array",
                        "title": "Correctresponsespattern",
                        "description": "Pattern for the correct response"
                    },
                    "choices": {
                        "items": {
                            "$ref": "#/components/schemas/BaseXapiInteractionComponent-Input"
                        },
                        "type": "array",
                        "title": "Choices",
                        "description": "List of selectable choices"
                    },
                    "scale": {
                        "items": {
                            "$ref": "#/components/schemas/BaseXapiInteractionComponent-Input"
                        },
                        "type": "array",
                        "title": "Scale",
                        "description": "List of options on the `likert` scale"
                    },
                    "source": {
                        "items": {
                            "$ref": "#/components/schemas/BaseXapiInteractionComponent-Input"
                        },
                        "type": "array",
                        "title": "Source",
                        "description": "List of sources to be matched"
                    },
                    "target": {
                        "items": {
                            "$ref": "#/components/schemas/BaseXapiInteractionComponent-Input"
                        },
                        "type": "array",
                        "title": "Target",
                        "description": "List of targets to be matched"
                    },
                    "steps": {
                        "items": {
                            "$ref": "#/components/schemas/BaseXapiInteractionComponent-Input"
                        },
                        "type": "array",
                        "title": "Steps",
                        "description": "List of the elements making up the interaction"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "interactionType"
                ],
                "title": "BaseXapiActivityInteractionDefinition",
                "description": "Pydantic model for `Activity` type `definition` property.\n\nIt is defined for field with interaction properties."
            },
            "BaseXapiActivityInteractionDefinition-Output": {
                "properties": {
                    "name": {
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/LanguageTag-Output"
                        },
                        "type": "object",
                        "title": "Name",
                        "description": "Human-readable/visual name of the Activity",
                        "examples": [
                            {
                                "en-US": "Example course"
                            }
                        ]
                    },
                    "description": {
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/LanguageTag-Output"
                        },
                        "type": "object",
                        "title": "Description",
                        "description": "Description of the Activity",
                        "examples": [
                            {
                                "en-US": "A fictitious example course."
                            }
                        ]
                    },
                    "type": {
                        "$ref": "#/components/schemas/IRI",
                        "title": "Type",
                        "description": "Type of the Activity",
                        "examples": [
                            "http://www.example.co.uk/types/exampleactivitytype"
                        ]
                    },
                    "moreInfo": {
                        "type": "string",
                        "minLength": 1,
                        "format": "uri",
                        "title": "Moreinfo",
                        "description": "URL to a document about the Activity",
                        "examples": [
                            "http://activitytype.example.com/345256"
                        ]
                    },
                    "extensions": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                },
                                {
                                    "items": {},
                                    "type": "array"
                                },
                                {
                                    "type": "object"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/IRI"
                        },
                        "type": "object",
                        "title": "Extensions",
                        "description": "Dictionary of other properties as needed",
                        "examples": [
                            {
                                "http://example.com/activitydefinitionextensions/room": {
                                    "id": "http://example.com/rooms/342",
                                    "name": "Example Room"
                                }
                            }
                        ]
                    },
                    "interactionType": {
                        "type": "string",
                        "enum": [
                            "true-false",
                            "choice",
                            "fill-in",
                            "long-fill-in",
                            "matching",
                            "performance",
                            "sequencing",
                            "likert",
                            "numeric",
                            "other"
                        ],
                        "title": "Interactiontype",
                        "description": "Type of the interaction"
                    },
                    "correctResponsesPattern": {
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "type": "array",
                        "title": "Correctresponsespattern",
                        "description": "Pattern for the correct response"
                    },
                    "choices": {
                        "items": {
                            "$ref": "#/components/schemas/BaseXapiInteractionComponent-Output"
                        },
                        "type": "array",
                        "title": "Choices",
                        "description": "List of selectable choices"
                    },
                    "scale": {
                        "items": {
                            "$ref": "#/components/schemas/BaseXapiInteractionComponent-Output"
                        },
                        "type": "array",
                        "title": "Scale",
                        "description": "List of options on the `likert` scale"
                    },
                    "source": {
                        "items": {
                            "$ref": "#/components/schemas/BaseXapiInteractionComponent-Output"
                        },
                        "type": "array",
                        "title": "Source",
                        "description": "List of sources to be matched"
                    },
                    "target": {
                        "items": {
                            "$ref": "#/components/schemas/BaseXapiInteractionComponent-Output"
                        },
                        "type": "array",
                        "title": "Target",
                        "description": "List of targets to be matched"
                    },
                    "steps": {
                        "items": {
                            "$ref": "#/components/schemas/BaseXapiInteractionComponent-Output"
                        },
                        "type": "array",
                        "title": "Steps",
                        "description": "List of the elements making up the interaction"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "interactionType"
                ],
                "title": "BaseXapiActivityInteractionDefinition",
                "description": "Pydantic model for `Activity` type `definition` property.\n\nIt is defined for field with interaction properties."
            },
            "BaseXapiAgentWithAccount-Input": {
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/BaseXapiAccount",
                        "description": "See BaseXapiAccount"
                    },
                    "objectType": {
                        "type": "string",
                        "const": "Agent",
                        "title": "Objecttype",
                        "default": "Agent"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "full name of the Agent",
                        "examples": [
                            "John Doe"
                        ]
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "account"
                ],
                "title": "BaseXapiAgentWithAccount",
                "description": "Pydantic model for `Agent` type property.\n\nIt is defined for agent type with an account IFI."
            },
            "BaseXapiAgentWithAccount-Output": {
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/BaseXapiAccount",
                        "description": "See BaseXapiAccount"
                    },
                    "objectType": {
                        "type": "string",
                        "const": "Agent",
                        "title": "Objecttype",
                        "default": "Agent"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "full name of the Agent",
                        "examples": [
                            "John Doe"
                        ]
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "account"
                ],
                "title": "BaseXapiAgentWithAccount",
                "description": "Pydantic model for `Agent` type property.\n\nIt is defined for agent type with an account IFI."
            },
            "BaseXapiAgentWithMbox": {
                "properties": {
                    "mbox": {
                        "$ref": "#/components/schemas/MailtoEmail",
                        "description": "Agent's email address",
                        "examples": [
                            "mailto:test@example.com"
                        ]
                    },
                    "objectType": {
                        "type": "string",
                        "const": "Agent",
                        "title": "Objecttype",
                        "default": "Agent"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "full name of the Agent",
                        "examples": [
                            "John Doe"
                        ]
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "mbox"
                ],
                "title": "BaseXapiAgentWithMbox",
                "description": "Pydantic model for `Agent` type property.\n\nIt is defined for agent type with a mailto IFI."
            },
            "BaseXapiAgentWithMboxSha1Sum": {
                "properties": {
                    "mbox_sha1sum": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{40}$",
                        "title": "Mbox Sha1Sum",
                        "description": "SHA1 hash of the Agent's email address",
                        "examples": [
                            "ebd31e95054c018b10727ccffd2ef2ec3a016ee9"
                        ]
                    },
                    "objectType": {
                        "type": "string",
                        "const": "Agent",
                        "title": "Objecttype",
                        "default": "Agent"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "full name of the Agent",
                        "examples": [
                            "John Doe"
                        ]
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "mbox_sha1sum"
                ],
                "title": "BaseXapiAgentWithMboxSha1Sum",
                "description": "Pydantic model for `Agent` type property.\n\nIt is defined for agent type with a hash IFI."
            },
            "BaseXapiAgentWithOpenId": {
                "properties": {
                    "openid": {
                        "$ref": "#/components/schemas/URI",
                        "description": "OpenID that uniquely identifies the Agent",
                        "examples": [
                            "http://johndoe.openid.example.org"
                        ]
                    },
                    "objectType": {
                        "type": "string",
                        "const": "Agent",
                        "title": "Objecttype",
                        "default": "Agent"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "full name of the Agent",
                        "examples": [
                            "John Doe"
                        ]
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "openid"
                ],
                "title": "BaseXapiAgentWithOpenId",
                "description": "Pydantic model for `Agent` type property.\n\nIt is defined for agent type with an openID IFI."
            },
            "BaseXapiAnonymousGroup-Input": {
                "properties": {
                    "objectType": {
                        "type": "string",
                        "const": "Group",
                        "title": "Objecttype",
                        "description": "Value `Group`"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Full name of the Group",
                        "examples": [
                            "Team Example"
                        ]
                    },
                    "member": {
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithMbox"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithMboxSha1Sum"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithOpenId"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithAccount-Input"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Member",
                        "description": "List of the members of this Group"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "objectType",
                    "member"
                ],
                "title": "BaseXapiAnonymousGroup",
                "description": "Pydantic model for `Group` type property.\n\nIt is defined for Anonymous Group type."
            },
            "BaseXapiAnonymousGroup-Output": {
                "properties": {
                    "objectType": {
                        "type": "string",
                        "const": "Group",
                        "title": "Objecttype",
                        "description": "Value `Group`"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Full name of the Group",
                        "examples": [
                            "Team Example"
                        ]
                    },
                    "member": {
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithMbox"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithMboxSha1Sum"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithOpenId"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithAccount-Output"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Member",
                        "description": "List of the members of this Group"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "objectType",
                    "member"
                ],
                "title": "BaseXapiAnonymousGroup",
                "description": "Pydantic model for `Group` type property.\n\nIt is defined for Anonymous Group type."
            },
            "BaseXapiAttachment-Input": {
                "properties": {
                    "usageType": {
                        "$ref": "#/components/schemas/IRI",
                        "description": "Identifies the usage of this Attachment",
                        "examples": [
                            "http://adlnet.gov/expapi/attachments/signature"
                        ]
                    },
                    "display": {
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/LanguageTag-Input"
                        },
                        "type": "object",
                        "title": "Display",
                        "description": "Attachment's title",
                        "examples": [
                            {
                                "en-US": "Signature"
                            }
                        ]
                    },
                    "description": {
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/LanguageTag-Input"
                        },
                        "type": "object",
                        "title": "Description",
                        "description": "Attachment's description",
                        "examples": [
                            {
                                "en-US": "A test signature"
                            }
                        ]
                    },
                    "contentType": {
                        "type": "string",
                        "title": "Contenttype",
                        "description": "Attachment's content type",
                        "examples": [
                            "application/octet-stream"
                        ]
                    },
                    "length": {
                        "type": "integer",
                        "title": "Length",
                        "description": "Length of the Attachment's data in octets",
                        "examples": [
                            4235
                        ]
                    },
                    "sha2": {
                        "type": "string",
                        "title": "Sha2",
                        "description": "SHA-2 hash of the Attachment data",
                        "examples": [
                            "672fa5fa658017f1b72d65036f13379c6ab05d4ab3b6664908d8acf0b6a0c634"
                        ]
                    },
                    "fileUrl": {
                        "type": "string",
                        "minLength": 1,
                        "format": "uri",
                        "title": "Fileurl",
                        "description": "URL from which the Attachment can be retrieved",
                        "examples": [
                            "http://example.com/myfile"
                        ]
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "usageType",
                    "display",
                    "contentType",
                    "length",
                    "sha2"
                ],
                "title": "BaseXapiAttachment",
                "description": "Pydantic model for `attachment` property."
            },
            "BaseXapiAttachment-Output": {
                "properties": {
                    "usageType": {
                        "$ref": "#/components/schemas/IRI",
                        "description": "Identifies the usage of this Attachment",
                        "examples": [
                            "http://adlnet.gov/expapi/attachments/signature"
                        ]
                    },
                    "display": {
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/LanguageTag-Output"
                        },
                        "type": "object",
                        "title": "Display",
                        "description": "Attachment's title",
                        "examples": [
                            {
                                "en-US": "Signature"
                            }
                        ]
                    },
                    "description": {
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/LanguageTag-Output"
                        },
                        "type": "object",
                        "title": "Description",
                        "description": "Attachment's description",
                        "examples": [
                            {
                                "en-US": "A test signature"
                            }
                        ]
                    },
                    "contentType": {
                        "type": "string",
                        "title": "Contenttype",
                        "description": "Attachment's content type",
                        "examples": [
                            "application/octet-stream"
                        ]
                    },
                    "length": {
                        "type": "integer",
                        "title": "Length",
                        "description": "Length of the Attachment's data in octets",
                        "examples": [
                            4235
                        ]
                    },
                    "sha2": {
                        "type": "string",
                        "title": "Sha2",
                        "description": "SHA-2 hash of the Attachment data",
                        "examples": [
                            "672fa5fa658017f1b72d65036f13379c6ab05d4ab3b6664908d8acf0b6a0c634"
                        ]
                    },
                    "fileUrl": {
                        "type": "string",
                        "minLength": 1,
                        "format": "uri",
                        "title": "Fileurl",
                        "description": "URL from which the Attachment can be retrieved",
                        "examples": [
                            "http://example.com/myfile"
                        ]
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "usageType",
                    "display",
                    "contentType",
                    "length",
                    "sha2"
                ],
                "title": "BaseXapiAttachment",
                "description": "Pydantic model for `attachment` property."
            },
            "BaseXapiContext-Input": {
                "properties": {
                    "registration": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Registration",
                        "description": "Registration that the Statement is associated with"
                    },
                    "instructor": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithMbox"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithMboxSha1Sum"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithOpenId"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithAccount-Input"
                            }
                        ],
                        "title": "Instructor",
                        "description": "Instructor that the Statement relates to"
                    },
                    "team": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiAnonymousGroup-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithMbox-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithMboxSha1Sum-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithOpenId-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithAccount-Input"
                            }
                        ],
                        "title": "Team",
                        "description": "Team that this Statement relates to"
                    },
                    "contextActivities": {
                        "$ref": "#/components/schemas/BaseXapiContextContextActivities-Input",
                        "title": "Contextactivities",
                        "description": "See BaseXapiContextContextActivities"
                    },
                    "revision": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Revision",
                        "description": "Revision of the activity associated with this Statement",
                        "examples": [
                            "revision_of_the_learning_activity"
                        ]
                    },
                    "platform": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Platform",
                        "description": "Platform where the learning activity took place",
                        "examples": [
                            "platform_of_the_learning_activity"
                        ]
                    },
                    "language": {
                        "$ref": "#/components/schemas/LanguageTag-Input",
                        "title": "Language",
                        "description": "Language in which the experience occurred",
                        "examples": [
                            "en-US"
                        ]
                    },
                    "statement": {
                        "$ref": "#/components/schemas/BaseXapiStatementRef",
                        "title": "Statement",
                        "description": "Another Statement giving context for this Statement"
                    },
                    "extensions": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                },
                                {
                                    "items": {},
                                    "type": "array"
                                },
                                {
                                    "type": "object"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/IRI"
                        },
                        "type": "object",
                        "title": "Extensions",
                        "description": "Dictionary of other properties as needed",
                        "examples": [
                            {
                                "http://example.com/extensions/example-ext": 0
                            }
                        ]
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "title": "BaseXapiContext",
                "description": "Pydantic model for `context` property."
            },
            "BaseXapiContext-Output": {
                "properties": {
                    "registration": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Registration",
                        "description": "Registration that the Statement is associated with"
                    },
                    "instructor": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithMbox"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithMboxSha1Sum"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithOpenId"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithAccount-Output"
                            }
                        ],
                        "title": "Instructor",
                        "description": "Instructor that the Statement relates to"
                    },
                    "team": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiAnonymousGroup-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithMbox-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithMboxSha1Sum-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithOpenId-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithAccount-Output"
                            }
                        ],
                        "title": "Team",
                        "description": "Team that this Statement relates to"
                    },
                    "contextActivities": {
                        "$ref": "#/components/schemas/BaseXapiContextContextActivities-Output",
                        "title": "Contextactivities",
                        "description": "See BaseXapiContextContextActivities"
                    },
                    "revision": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Revision",
                        "description": "Revision of the activity associated with this Statement",
                        "examples": [
                            "revision_of_the_learning_activity"
                        ]
                    },
                    "platform": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Platform",
                        "description": "Platform where the learning activity took place",
                        "examples": [
                            "platform_of_the_learning_activity"
                        ]
                    },
                    "language": {
                        "$ref": "#/components/schemas/LanguageTag-Output",
                        "title": "Language",
                        "description": "Language in which the experience occurred",
                        "examples": [
                            "en-US"
                        ]
                    },
                    "statement": {
                        "$ref": "#/components/schemas/BaseXapiStatementRef",
                        "title": "Statement",
                        "description": "Another Statement giving context for this Statement"
                    },
                    "extensions": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                },
                                {
                                    "items": {},
                                    "type": "array"
                                },
                                {
                                    "type": "object"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/IRI"
                        },
                        "type": "object",
                        "title": "Extensions",
                        "description": "Dictionary of other properties as needed",
                        "examples": [
                            {
                                "http://example.com/extensions/example-ext": 0
                            }
                        ]
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "title": "BaseXapiContext",
                "description": "Pydantic model for `context` property."
            },
            "BaseXapiContextContextActivities-Input": {
                "properties": {
                    "parent": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiActivity-Input"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/BaseXapiActivity-Input"
                                },
                                "type": "array"
                            }
                        ],
                        "title": "Parent",
                        "description": "An Activity with a direct relation to the statement's Activity"
                    },
                    "grouping": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiActivity-Input"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/BaseXapiActivity-Input"
                                },
                                "type": "array"
                            }
                        ],
                        "title": "Grouping",
                        "description": "An Activity with an indirect relation to the statement's Activity"
                    },
                    "category": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiActivity-Input"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/BaseXapiActivity-Input"
                                },
                                "type": "array"
                            }
                        ],
                        "title": "Category",
                        "description": "An Activity used to categorize the Statement"
                    },
                    "other": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiActivity-Input"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/BaseXapiActivity-Input"
                                },
                                "type": "array"
                            }
                        ],
                        "title": "Other",
                        "description": "A contextActivity that doesn't fit one of the other properties"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "title": "BaseXapiContextContextActivities",
                "description": "Pydantic model for context `contextActivities` property."
            },
            "BaseXapiContextContextActivities-Output": {
                "properties": {
                    "parent": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiActivity-Output"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/BaseXapiActivity-Output"
                                },
                                "type": "array"
                            }
                        ],
                        "title": "Parent",
                        "description": "An Activity with a direct relation to the statement's Activity"
                    },
                    "grouping": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiActivity-Output"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/BaseXapiActivity-Output"
                                },
                                "type": "array"
                            }
                        ],
                        "title": "Grouping",
                        "description": "An Activity with an indirect relation to the statement's Activity"
                    },
                    "category": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiActivity-Output"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/BaseXapiActivity-Output"
                                },
                                "type": "array"
                            }
                        ],
                        "title": "Category",
                        "description": "An Activity used to categorize the Statement"
                    },
                    "other": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiActivity-Output"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/BaseXapiActivity-Output"
                                },
                                "type": "array"
                            }
                        ],
                        "title": "Other",
                        "description": "A contextActivity that doesn't fit one of the other properties"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "title": "BaseXapiContextContextActivities",
                "description": "Pydantic model for context `contextActivities` property."
            },
            "BaseXapiIdentifiedGroupWithAccount-Input": {
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/BaseXapiAccount",
                        "description": "See BaseXapiAccount"
                    },
                    "objectType": {
                        "type": "string",
                        "const": "Group",
                        "title": "Objecttype",
                        "description": "Value `Group`"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Full name of the Group",
                        "examples": [
                            "Team Example"
                        ]
                    },
                    "member": {
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithMbox"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithMboxSha1Sum"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithOpenId"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithAccount-Input"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Member",
                        "description": "List of the members of this Group"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "account",
                    "objectType"
                ],
                "title": "BaseXapiIdentifiedGroupWithAccount",
                "description": "Pydantic model for `Group` type property.\n\nIt is defined for group type with an account IFI."
            },
            "BaseXapiIdentifiedGroupWithAccount-Output": {
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/BaseXapiAccount",
                        "description": "See BaseXapiAccount"
                    },
                    "objectType": {
                        "type": "string",
                        "const": "Group",
                        "title": "Objecttype",
                        "description": "Value `Group`"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Full name of the Group",
                        "examples": [
                            "Team Example"
                        ]
                    },
                    "member": {
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithMbox"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithMboxSha1Sum"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithOpenId"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithAccount-Output"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Member",
                        "description": "List of the members of this Group"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "account",
                    "objectType"
                ],
                "title": "BaseXapiIdentifiedGroupWithAccount",
                "description": "Pydantic model for `Group` type property.\n\nIt is defined for group type with an account IFI."
            },
            "BaseXapiIdentifiedGroupWithMbox-Input": {
                "properties": {
                    "mbox": {
                        "$ref": "#/components/schemas/MailtoEmail",
                        "description": "Agent's email address",
                        "examples": [
                            "mailto:test@example.com"
                        ]
                    },
                    "objectType": {
                        "type": "string",
                        "const": "Group",
                        "title": "Objecttype",
                        "description": "Value `Group`"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Full name of the Group",
                        "examples": [
                            "Team Example"
                        ]
                    },
                    "member": {
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithMbox"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithMboxSha1Sum"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithOpenId"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithAccount-Input"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Member",
                        "description": "List of the members of this Group"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "mbox",
                    "objectType"
                ],
                "title": "BaseXapiIdentifiedGroupWithMbox",
                "description": "Pydantic model for `Group` type property.\n\nIt is defined for group type with a mailto IFI."
            },
            "BaseXapiIdentifiedGroupWithMbox-Output": {
                "properties": {
                    "mbox": {
                        "$ref": "#/components/schemas/MailtoEmail",
                        "description": "Agent's email address",
                        "examples": [
                            "mailto:test@example.com"
                        ]
                    },
                    "objectType": {
                        "type": "string",
                        "const": "Group",
                        "title": "Objecttype",
                        "description": "Value `Group`"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Full name of the Group",
                        "examples": [
                            "Team Example"
                        ]
                    },
                    "member": {
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithMbox"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithMboxSha1Sum"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithOpenId"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithAccount-Output"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Member",
                        "description": "List of the members of this Group"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "mbox",
                    "objectType"
                ],
                "title": "BaseXapiIdentifiedGroupWithMbox",
                "description": "Pydantic model for `Group` type property.\n\nIt is defined for group type with a mailto IFI."
            },
            "BaseXapiIdentifiedGroupWithMboxSha1Sum-Input": {
                "properties": {
                    "mbox_sha1sum": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{40}$",
                        "title": "Mbox Sha1Sum",
                        "description": "SHA1 hash of the Agent's email address",
                        "examples": [
                            "ebd31e95054c018b10727ccffd2ef2ec3a016ee9"
                        ]
                    },
                    "objectType": {
                        "type": "string",
                        "const": "Group",
                        "title": "Objecttype",
                        "description": "Value `Group`"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Full name of the Group",
                        "examples": [
                            "Team Example"
                        ]
                    },
                    "member": {
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithMbox"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithMboxSha1Sum"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithOpenId"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithAccount-Input"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Member",
                        "description": "List of the members of this Group"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "mbox_sha1sum",
                    "objectType"
                ],
                "title": "BaseXapiIdentifiedGroupWithMboxSha1Sum",
                "description": "Pydantic model for `Group` type property.\n\nIt is defined for group type with a hash IFI."
            },
            "BaseXapiIdentifiedGroupWithMboxSha1Sum-Output": {
                "properties": {
                    "mbox_sha1sum": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{40}$",
                        "title": "Mbox Sha1Sum",
                        "description": "SHA1 hash of the Agent's email address",
                        "examples": [
                            "ebd31e95054c018b10727ccffd2ef2ec3a016ee9"
                        ]
                    },
                    "objectType": {
                        "type": "string",
                        "const": "Group",
                        "title": "Objecttype",
                        "description": "Value `Group`"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Full name of the Group",
                        "examples": [
                            "Team Example"
                        ]
                    },
                    "member": {
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithMbox"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithMboxSha1Sum"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithOpenId"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithAccount-Output"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Member",
                        "description": "List of the members of this Group"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "mbox_sha1sum",
                    "objectType"
                ],
                "title": "BaseXapiIdentifiedGroupWithMboxSha1Sum",
                "description": "Pydantic model for `Group` type property.\n\nIt is defined for group type with a hash IFI."
            },
            "BaseXapiIdentifiedGroupWithOpenId-Input": {
                "properties": {
                    "openid": {
                        "$ref": "#/components/schemas/URI",
                        "description": "OpenID that uniquely identifies the Agent",
                        "examples": [
                            "http://johndoe.openid.example.org"
                        ]
                    },
                    "objectType": {
                        "type": "string",
                        "const": "Group",
                        "title": "Objecttype",
                        "description": "Value `Group`"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Full name of the Group",
                        "examples": [
                            "Team Example"
                        ]
                    },
                    "member": {
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithMbox"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithMboxSha1Sum"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithOpenId"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithAccount-Input"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Member",
                        "description": "List of the members of this Group"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "openid",
                    "objectType"
                ],
                "title": "BaseXapiIdentifiedGroupWithOpenId",
                "description": "Pydantic model for `Group` type property.\n\nIt is defined for group type with an openID IFI."
            },
            "BaseXapiIdentifiedGroupWithOpenId-Output": {
                "properties": {
                    "openid": {
                        "$ref": "#/components/schemas/URI",
                        "description": "OpenID that uniquely identifies the Agent",
                        "examples": [
                            "http://johndoe.openid.example.org"
                        ]
                    },
                    "objectType": {
                        "type": "string",
                        "const": "Group",
                        "title": "Objecttype",
                        "description": "Value `Group`"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Full name of the Group",
                        "examples": [
                            "Team Example"
                        ]
                    },
                    "member": {
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithMbox"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithMboxSha1Sum"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithOpenId"
                                },
                                {
                                    "$ref": "#/components/schemas/BaseXapiAgentWithAccount-Output"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Member",
                        "description": "List of the members of this Group"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "openid",
                    "objectType"
                ],
                "title": "BaseXapiIdentifiedGroupWithOpenId",
                "description": "Pydantic model for `Group` type property.\n\nIt is defined for group type with an openID IFI."
            },
            "BaseXapiInteractionComponent-Input": {
                "properties": {
                    "id": {
                        "type": "string",
                        "pattern": "^[^\\s]+$",
                        "title": "Id",
                        "description": "Identifier of the interaction component"
                    },
                    "description": {
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/LanguageTag-Input"
                        },
                        "type": "object",
                        "title": "Description",
                        "description": "Description of the interaction"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "BaseXapiInteractionComponent",
                "description": "Pydantic model for an interaction component."
            },
            "BaseXapiInteractionComponent-Output": {
                "properties": {
                    "id": {
                        "type": "string",
                        "pattern": "^[^\\s]+$",
                        "title": "Id",
                        "description": "Identifier of the interaction component"
                    },
                    "description": {
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/LanguageTag-Output"
                        },
                        "type": "object",
                        "title": "Description",
                        "description": "Description of the interaction"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "BaseXapiInteractionComponent",
                "description": "Pydantic model for an interaction component."
            },
            "BaseXapiResult-Input": {
                "properties": {
                    "score": {
                        "$ref": "#/components/schemas/BaseXapiResultScore-Input",
                        "title": "Score",
                        "description": "See BaseXapiResultScore"
                    },
                    "success": {
                        "type": "boolean",
                        "title": "Success",
                        "description": "Indicates whether the attempt on the Activity was successful"
                    },
                    "completion": {
                        "type": "boolean",
                        "title": "Completion",
                        "description": "Indicates whether the Activity was completed"
                    },
                    "response": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Response",
                        "description": "Response for the given Activity",
                        "examples": [
                            "Wow, nice work!"
                        ]
                    },
                    "duration": {
                        "type": "string",
                        "format": "duration",
                        "title": "Duration",
                        "description": "Duration over which the Statement occurred",
                        "examples": [
                            "PT1234S"
                        ]
                    },
                    "extensions": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                },
                                {
                                    "items": {},
                                    "type": "array"
                                },
                                {
                                    "type": "object"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/IRI"
                        },
                        "type": "object",
                        "title": "Extensions",
                        "description": "Dictionary of other properties as needed",
                        "examples": [
                            {
                                "http://example.com/extensions/example-ext": 0
                            }
                        ]
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "title": "BaseXapiResult",
                "description": "Pydantic model for `result` property."
            },
            "BaseXapiResult-Output": {
                "properties": {
                    "score": {
                        "$ref": "#/components/schemas/BaseXapiResultScore-Output",
                        "title": "Score",
                        "description": "See BaseXapiResultScore"
                    },
                    "success": {
                        "type": "boolean",
                        "title": "Success",
                        "description": "Indicates whether the attempt on the Activity was successful"
                    },
                    "completion": {
                        "type": "boolean",
                        "title": "Completion",
                        "description": "Indicates whether the Activity was completed"
                    },
                    "response": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Response",
                        "description": "Response for the given Activity",
                        "examples": [
                            "Wow, nice work!"
                        ]
                    },
                    "duration": {
                        "type": "string",
                        "format": "duration",
                        "title": "Duration",
                        "description": "Duration over which the Statement occurred",
                        "examples": [
                            "PT1234S"
                        ]
                    },
                    "extensions": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                },
                                {
                                    "items": {},
                                    "type": "array"
                                },
                                {
                                    "type": "object"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/IRI"
                        },
                        "type": "object",
                        "title": "Extensions",
                        "description": "Dictionary of other properties as needed",
                        "examples": [
                            {
                                "http://example.com/extensions/example-ext": 0
                            }
                        ]
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "title": "BaseXapiResult",
                "description": "Pydantic model for `result` property."
            },
            "BaseXapiResultScore-Input": {
                "properties": {
                    "scaled": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 1.0,
                                "minimum": -1.0
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Scaled",
                        "description": "Normalized score related to the experience",
                        "examples": [
                            0
                        ]
                    },
                    "raw": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Raw",
                        "description": "Non-normalized score achieved by the Actor",
                        "examples": [
                            10
                        ]
                    },
                    "min": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Min",
                        "description": "Lowest possible score",
                        "examples": [
                            0
                        ]
                    },
                    "max": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Max",
                        "description": "Highest possible score",
                        "examples": [
                            20
                        ]
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "title": "BaseXapiResultScore",
                "description": "Pydantic model for result `score` property."
            },
            "BaseXapiResultScore-Output": {
                "properties": {
                    "scaled": {
                        "type": "string",
                        "title": "Scaled",
                        "description": "Normalized score related to the experience",
                        "examples": [
                            0
                        ]
                    },
                    "raw": {
                        "type": "string",
                        "title": "Raw",
                        "description": "Non-normalized score achieved by the Actor",
                        "examples": [
                            10
                        ]
                    },
                    "min": {
                        "type": "string",
                        "title": "Min",
                        "description": "Lowest possible score",
                        "examples": [
                            0
                        ]
                    },
                    "max": {
                        "type": "string",
                        "title": "Max",
                        "description": "Highest possible score",
                        "examples": [
                            20
                        ]
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "title": "BaseXapiResultScore",
                "description": "Pydantic model for result `score` property."
            },
            "BaseXapiStatement-Input": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id",
                        "description": "Generated UUID string from the source event string"
                    },
                    "actor": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithMbox"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithMboxSha1Sum"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithOpenId"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithAccount-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAnonymousGroup-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithMbox-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithMboxSha1Sum-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithOpenId-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithAccount-Input"
                            }
                        ],
                        "title": "Actor",
                        "description": "Definition of who performed the action"
                    },
                    "verb": {
                        "$ref": "#/components/schemas/BaseXapiVerb-Input",
                        "description": "Action between an Actor and an Activity"
                    },
                    "object": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiActivity-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiStatementRef"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiSubStatement-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithMbox"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithMboxSha1Sum"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithOpenId"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithAccount-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAnonymousGroup-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithMbox-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithMboxSha1Sum-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithOpenId-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithAccount-Input"
                            }
                        ],
                        "title": "Object",
                        "description": "Definition of the thing that was acted on"
                    },
                    "result": {
                        "$ref": "#/components/schemas/BaseXapiResult-Input",
                        "title": "Result",
                        "description": "Outcome related to the Statement"
                    },
                    "context": {
                        "$ref": "#/components/schemas/BaseXapiContext-Input",
                        "title": "Context",
                        "description": "Contextual information for the Statement"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamp",
                        "description": "Timestamp of when the event occurred"
                    },
                    "stored": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Stored",
                        "description": "Timestamp of when the event was recorded"
                    },
                    "authority": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithMbox"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithMboxSha1Sum"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithOpenId"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithAccount-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAnonymousGroup-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithMbox-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithMboxSha1Sum-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithOpenId-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithAccount-Input"
                            }
                        ],
                        "title": "Authority",
                        "description": "Actor asserting this Statement is true"
                    },
                    "version": {
                        "type": "string",
                        "pattern": "^1\\.0\\.[0-9]+$",
                        "title": "Version",
                        "description": "Associated xAPI version of the Statement",
                        "default": "1.0.0"
                    },
                    "attachments": {
                        "items": {
                            "$ref": "#/components/schemas/BaseXapiAttachment-Input"
                        },
                        "type": "array",
                        "title": "Attachments",
                        "description": "List of attachments"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "actor",
                    "verb",
                    "object"
                ],
                "title": "BaseXapiStatement",
                "description": "Pydantic model for base xAPI statements."
            },
            "BaseXapiStatement-Output": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id",
                        "description": "Generated UUID string from the source event string"
                    },
                    "actor": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithMbox"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithMboxSha1Sum"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithOpenId"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithAccount-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAnonymousGroup-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithMbox-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithMboxSha1Sum-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithOpenId-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithAccount-Output"
                            }
                        ],
                        "title": "Actor",
                        "description": "Definition of who performed the action"
                    },
                    "verb": {
                        "$ref": "#/components/schemas/BaseXapiVerb-Output",
                        "description": "Action between an Actor and an Activity"
                    },
                    "object": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiActivity-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiStatementRef"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiSubStatement-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithMbox"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithMboxSha1Sum"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithOpenId"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithAccount-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAnonymousGroup-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithMbox-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithMboxSha1Sum-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithOpenId-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithAccount-Output"
                            }
                        ],
                        "title": "Object",
                        "description": "Definition of the thing that was acted on"
                    },
                    "result": {
                        "$ref": "#/components/schemas/BaseXapiResult-Output",
                        "title": "Result",
                        "description": "Outcome related to the Statement"
                    },
                    "context": {
                        "$ref": "#/components/schemas/BaseXapiContext-Output",
                        "title": "Context",
                        "description": "Contextual information for the Statement"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamp",
                        "description": "Timestamp of when the event occurred"
                    },
                    "stored": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Stored",
                        "description": "Timestamp of when the event was recorded"
                    },
                    "authority": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithMbox"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithMboxSha1Sum"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithOpenId"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithAccount-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAnonymousGroup-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithMbox-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithMboxSha1Sum-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithOpenId-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithAccount-Output"
                            }
                        ],
                        "title": "Authority",
                        "description": "Actor asserting this Statement is true"
                    },
                    "version": {
                        "type": "string",
                        "pattern": "^1\\.0\\.[0-9]+$",
                        "title": "Version",
                        "description": "Associated xAPI version of the Statement",
                        "default": "1.0.0"
                    },
                    "attachments": {
                        "items": {
                            "$ref": "#/components/schemas/BaseXapiAttachment-Output"
                        },
                        "type": "array",
                        "title": "Attachments",
                        "description": "List of attachments"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "actor",
                    "verb",
                    "object"
                ],
                "title": "BaseXapiStatement",
                "description": "Pydantic model for base xAPI statements."
            },
            "BaseXapiStatementRef": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id",
                        "description": "UUID of the referenced statement"
                    },
                    "objectType": {
                        "type": "string",
                        "const": "StatementRef",
                        "title": "Objecttype",
                        "description": "Value `StatementRef`"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "id",
                    "objectType"
                ],
                "title": "BaseXapiStatementRef",
                "description": "Pydantic model for `StatementRef` type property.\n\nAttributes:\n    objectType (str): Consists of the .\n    id (UUID): Consists of the ."
            },
            "BaseXapiSubStatement-Input": {
                "properties": {
                    "actor": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithMbox"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithMboxSha1Sum"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithOpenId"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithAccount-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAnonymousGroup-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithMbox-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithMboxSha1Sum-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithOpenId-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithAccount-Input"
                            }
                        ],
                        "title": "Actor",
                        "description": "See BaseXapiAgent and BaseXapiGroup"
                    },
                    "verb": {
                        "$ref": "#/components/schemas/BaseXapiVerb-Input",
                        "description": "See BaseXapiVerb"
                    },
                    "object": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiActivity-Input"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiStatementRef"
                            }
                        ],
                        "title": "Object",
                        "description": "See BaseXapiUnnestedObject"
                    },
                    "objectType": {
                        "type": "string",
                        "const": "SubStatement",
                        "title": "Objecttype",
                        "description": "Value `SubStatement`"
                    },
                    "result": {
                        "$ref": "#/components/schemas/BaseXapiResult-Input",
                        "title": "Result",
                        "description": "Outcome related to the SubStatement"
                    },
                    "context": {
                        "$ref": "#/components/schemas/BaseXapiContext-Input",
                        "title": "Context",
                        "description": "Contextual information for the SubStatement"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamp",
                        "description": "Timestamp of when the event occurred"
                    },
                    "attachments": {
                        "items": {
                            "$ref": "#/components/schemas/BaseXapiAttachment-Input"
                        },
                        "type": "array",
                        "title": "Attachments",
                        "description": "List of attachments"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "actor",
                    "verb",
                    "object",
                    "objectType"
                ],
                "title": "BaseXapiSubStatement",
                "description": "Pydantic model for `SubStatement` type property."
            },
            "BaseXapiSubStatement-Output": {
                "properties": {
                    "actor": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithMbox"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithMboxSha1Sum"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithOpenId"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAgentWithAccount-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiAnonymousGroup-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithMbox-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithMboxSha1Sum-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithOpenId-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiIdentifiedGroupWithAccount-Output"
                            }
                        ],
                        "title": "Actor",
                        "description": "See BaseXapiAgent and BaseXapiGroup"
                    },
                    "verb": {
                        "$ref": "#/components/schemas/BaseXapiVerb-Output",
                        "description": "See BaseXapiVerb"
                    },
                    "object": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseXapiActivity-Output"
                            },
                            {
                                "$ref": "#/components/schemas/BaseXapiStatementRef"
                            }
                        ],
                        "title": "Object",
                        "description": "See BaseXapiUnnestedObject"
                    },
                    "objectType": {
                        "type": "string",
                        "const": "SubStatement",
                        "title": "Objecttype",
                        "description": "Value `SubStatement`"
                    },
                    "result": {
                        "$ref": "#/components/schemas/BaseXapiResult-Output",
                        "title": "Result",
                        "description": "Outcome related to the SubStatement"
                    },
                    "context": {
                        "$ref": "#/components/schemas/BaseXapiContext-Output",
                        "title": "Context",
                        "description": "Contextual information for the SubStatement"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamp",
                        "description": "Timestamp of when the event occurred"
                    },
                    "attachments": {
                        "items": {
                            "$ref": "#/components/schemas/BaseXapiAttachment-Output"
                        },
                        "type": "array",
                        "title": "Attachments",
                        "description": "List of attachments"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "actor",
                    "verb",
                    "object",
                    "objectType"
                ],
                "title": "BaseXapiSubStatement",
                "description": "Pydantic model for `SubStatement` type property."
            },
            "BaseXapiVerb-Input": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/IRI",
                        "description": "Identifier for the verb",
                        "examples": [
                            "http://adlnet.gov/expapi/verbs/attended"
                        ]
                    },
                    "display": {
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/LanguageTag-Input"
                        },
                        "type": "object",
                        "title": "Display",
                        "description": "Human-readable representation of the verb",
                        "examples": [
                            {
                                "en-GB": "attended",
                                "en-US": "attended"
                            }
                        ]
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "BaseXapiVerb",
                "description": "Pydantic model for `verb` property."
            },
            "BaseXapiVerb-Output": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/IRI",
                        "description": "Identifier for the verb",
                        "examples": [
                            "http://adlnet.gov/expapi/verbs/attended"
                        ]
                    },
                    "display": {
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/LanguageTag-Output"
                        },
                        "type": "object",
                        "title": "Display",
                        "description": "Human-readable representation of the verb",
                        "examples": [
                            {
                                "en-GB": "attended",
                                "en-US": "attended"
                            }
                        ]
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "BaseXapiVerb",
                "description": "Pydantic model for `verb` property."
            },
            "DataBackendStatus": {
                "type": "string",
                "enum": [
                    "ok",
                    "away",
                    "error"
                ],
                "title": "DataBackendStatus",
                "description": "Data backend statuses."
            },
            "ErrorDetail": {
                "properties": {
                    "detail": {
                        "type": "string",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "required": [
                    "detail"
                ],
                "title": "ErrorDetail",
                "description": "Pydantic model for errors raised detail.\n\nType for return value for errors raised in API endpoints.\nUseful for OpenAPI documentation generation."
            },
            "GetStatementsResponse": {
                "properties": {
                    "statements": {
                        "items": {
                            "$ref": "#/components/schemas/BaseXapiStatement-Output"
                        },
                        "type": "array",
                        "title": "Statements"
                    },
                    "more": {
                        "type": "string",
                        "format": "path",
                        "title": "More",
                        "examples": [
                            "/xAPI/statements/?pit_id=pit_id"
                        ]
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "statements"
                ],
                "title": "GetStatementsResponse",
                "description": "Get statements route response model."
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "Heartbeat": {
                "properties": {
                    "database": {
                        "$ref": "#/components/schemas/DataBackendStatus"
                    }
                },
                "type": "object",
                "required": [
                    "database"
                ],
                "title": "Heartbeat",
                "description": "Ralph backends status."
            },
            "IRI": {
                "type": "string",
                "title": "IRI",
                "description": "Pydantic custom data type validating RFC 3987 IRIs."
            },
            "LanguageTag-Input": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "$ref": "#/components/schemas/LanguageTag-Input"
                    }
                ],
                "title": "LanguageTag",
                "description": "Pydantic custom data type validating RFC 5646 Language tags."
            },
            "LanguageTag-Output": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "$ref": "#/components/schemas/LanguageTag-Output"
                    }
                ],
                "title": "LanguageTag",
                "description": "Pydantic custom data type validating RFC 5646 Language tags."
            },
            "MailtoEmail": {
                "type": "string",
                "title": "MailtoEmail",
                "description": "Pydantic custom data type validating `mailto:email` format."
            },
            "URI": {
                "type": "string",
                "title": "URI",
                "description": "Pydantic custom data type validating RFC 3987 URIs."
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        },
        "securitySchemes": {
            "HTTPBasic": {
                "type": "http",
                "scheme": "basic"
            },
            "OpenIdConnect": {
                "type": "openIdConnect",
                "openIdConnectUrl": "http://learning-analytics-playground_keycloak_1:8080/auth/realms/fun-mooc\n    /.well-known/openid-configuration"
            },
            "Cozy Authentication": {
                "type": "apiKey",
                "in": "header",
                "name": "X-Auth-Token"
            }
        }
    }
}
